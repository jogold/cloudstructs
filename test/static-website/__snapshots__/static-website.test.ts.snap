// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StaticWebsite 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "OriginRequest0052232D": Object {
      "DependsOn": Array [
        "OriginRequestServiceRole04760C2E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7103577a2cb7fc67b45dcf792018885f3f5557b18e7a4b239e35ed10d119f5b9.zip",
        },
        "Description": "src/static-website/origin-request.edge-lambda.ts",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "OriginRequestServiceRole04760C2E",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "OriginRequestCurrentVersionD6F77E9F01c31a424b9789d3d40146516339cf86": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "OriginRequest0052232D",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "OriginRequestParameter759D9B4C": Object {
      "Properties": Object {
        "Name": "/cdk/EdgeFunctionArn/eu-west-1/Stack/StaticWebsite/OriginRequest",
        "Type": "String",
        "Value": Object {
          "Ref": "OriginRequestCurrentVersionD6F77E9F01c31a424b9789d3d40146516339cf86",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "OriginRequestServiceRole04760C2E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`StaticWebsite 2`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiDefaultRoute1D83B0D8": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ApiF70053CD",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$default",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "ApiDefaultRouteIntegrationDB7B670E",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "ApiDefaultRouteIntegrationDB7B670E": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ApiF70053CD",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "Fn9270CBC0",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "ApiDefaultRouteIntegrationPermission612BAC34": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "Fn9270CBC0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiF70053CD",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDefaultStage189A7074": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ApiF70053CD",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "ApiF70053CD": Object {
      "Properties": Object {
        "Name": "Api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "CustomCrossRegionStringParameterReaderCustomResourceProviderHandler65B5F33A": Object {
      "DependsOn": Array [
        "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "ssm:GetParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-east-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":parameter/cdk/EdgeFunctionArn/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Fn9270CBC0": Object {
      "DependsOn": Array [
        "FnServiceRoleB9001A96",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "inline",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FnServiceRoleB9001A96",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FnServiceRoleB9001A96": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "HostedZoneDB99F866": Object {
      "Properties": Object {
        "Name": "my-site.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "StaticWebsiteARecord6F0B2A09": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "StaticWebsiteDistributionBAD21F75",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": Object {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "www.my-site.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "StaticWebsiteAaaaRecordA6A958CD": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "StaticWebsiteDistributionBAD21F75",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": Object {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "www.my-site.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "StaticWebsiteBucket0E92E0FC": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StaticWebsiteBucketPolicy86C0E5CF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "StaticWebsiteBucket0E92E0FC",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "StaticWebsiteBucket0E92E0FC",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StaticWebsiteCertificateCertificateRequestorFunction8DAF9CCF": Object {
      "DependsOn": Array [
        "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyBBEC5BA3",
        "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleC558C69B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleC558C69B",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleC558C69B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyBBEC5BA3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/",
                    Object {
                      "Ref": "HostedZoneDB99F866",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyBBEC5BA3",
        "Roles": Array [
          Object {
            "Ref": "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleC558C69B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StaticWebsiteCertificateCertificateRequestorResource7C29CEF3": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "www.my-site.com",
        "HostedZoneId": Object {
          "Ref": "HostedZoneDB99F866",
        },
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "StaticWebsiteCertificateCertificateRequestorFunction8DAF9CCF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteDistributionBAD21F75": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "www.my-site.com",
          ],
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "LambdaFunctionARN": Object {
                  "Fn::GetAtt": Array [
                    "StaticWebsiteOriginRequestArnReaderEA9004DC",
                    "FunctionArn",
                  ],
                },
              },
            ],
            "ResponseHeadersPolicyId": Object {
              "Ref": "StaticWebsiteResponseHeadersPolicyF3EBE566",
            },
            "TargetOriginId": "StackStaticWebsiteDistributionOrigin103625211",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2and3",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "StaticWebsiteBucket0E92E0FC",
                  "RegionalDomainName",
                ],
              },
              "Id": "StackStaticWebsiteDistributionOrigin103625211",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "StaticWebsiteCertificateCertificateRequestorResource7C29CEF3",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "StaticWebsiteDistributionOrigin1S3Origin3045572F": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for StackStaticWebsiteDistributionOrigin103625211",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "StaticWebsiteHttpsRedirectRedirectAliasRecord2591f3E6FEEF4C": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "StaticWebsiteHttpsRedirectRedirectDistributionCFDistributionF7ADE06F",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": Object {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "my-site.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "StaticWebsiteHttpsRedirectRedirectAliasRecordSix2591f309F9321D": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "StaticWebsiteHttpsRedirectRedirectDistributionCFDistributionF7ADE06F",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": Object {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "my-site.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "StaticWebsiteHttpsRedirectRedirectBucket45BA11C9": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "WebsiteConfiguration": Object {
          "RedirectAllRequestsTo": Object {
            "HostName": "www.my-site.com",
            "Protocol": "https",
          },
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionEE7DB513": Object {
      "DependsOn": Array [
        "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy81FC4515",
        "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRole08DAF404",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRole08DAF404",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRole08DAF404": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy81FC4515": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/",
                    Object {
                      "Ref": "HostedZoneDB99F866",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy81FC4515",
        "Roles": Array [
          Object {
            "Ref": "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRole08DAF404",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorResource692E38D9": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "my-site.com",
        "HostedZoneId": Object {
          "Ref": "HostedZoneDB99F866",
        },
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionEE7DB513",
            "Arn",
          ],
        },
        "SubjectAlternativeNames": Array [
          "my-site.com",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteHttpsRedirectRedirectDistributionCFDistributionF7ADE06F": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "my-site.com",
          ],
          "Comment": "Redirect to www.my-site.com from my-site.com",
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": Object {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "http-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::GetAtt": Array [
                          "StaticWebsiteHttpsRedirectRedirectBucket45BA11C9",
                          "WebsiteURL",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "origin1",
            },
          ],
          "PriceClass": "PriceClass_All",
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorResource692E38D9",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "StaticWebsiteOriginRequestArnReaderEA9004DC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ParameterName": "/cdk/EdgeFunctionArn/eu-west-1/Stack/StaticWebsite/OriginRequest",
        "RefreshToken": "OriginRequestCurrentVersionD6F77E9F01c31a424b9789d3d40146516339cf86",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCrossRegionStringParameterReaderCustomResourceProviderHandler65B5F33A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CrossRegionStringParameterReader",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsitePutConfig8F8DD69A": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "StaticWebsitePutConfigCustomResourcePolicy54D08151",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"S3\\",\\"action\\":\\"putObject\\",\\"parameters\\":{\\"Bucket\\":\\"",
              Object {
                "Ref": "StaticWebsiteBucket0E92E0FC",
              },
              "\\",\\"Key\\":\\"config.json\\",\\"Body\\":\\"{\\\\\\"key1\\\\\\":\\\\\\"value1\\\\\\",\\\\\\"key2\\\\\\":\\\\\\"value2\\\\\\",\\\\\\"apiUrl\\\\\\":\\\\\\"https://",
              Object {
                "Ref": "ApiF70053CD",
              },
              ".execute-api.eu-west-1.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/\\\\\\"}\\",\\"ContentType\\":\\"application/json\\",\\"CacheControl\\":\\"max-age=0, no-cache, no-store, must-revalidate\\"},\\"physicalResourceId\\":{\\"id\\":\\"config\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"S3\\",\\"action\\":\\"putObject\\",\\"parameters\\":{\\"Bucket\\":\\"",
              Object {
                "Ref": "StaticWebsiteBucket0E92E0FC",
              },
              "\\",\\"Key\\":\\"config.json\\",\\"Body\\":\\"{\\\\\\"key1\\\\\\":\\\\\\"value1\\\\\\",\\\\\\"key2\\\\\\":\\\\\\"value2\\\\\\",\\\\\\"apiUrl\\\\\\":\\\\\\"https://",
              Object {
                "Ref": "ApiF70053CD",
              },
              ".execute-api.eu-west-1.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/\\\\\\"}\\",\\"ContentType\\":\\"application/json\\",\\"CacheControl\\":\\"max-age=0, no-cache, no-store, must-revalidate\\"},\\"physicalResourceId\\":{\\"id\\":\\"config\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsitePutConfigCustomResourcePolicy54D08151": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "StaticWebsiteBucket0E92E0FC",
                        "Arn",
                      ],
                    },
                    "/config.json",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StaticWebsitePutConfigCustomResourcePolicy54D08151",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StaticWebsiteResponseHeadersPolicyF3EBE566": Object {
      "Properties": Object {
        "ResponseHeadersPolicyConfig": Object {
          "Name": "StackStaticWebsiteResponseHeadersPolicyEF11926D",
          "SecurityHeadersConfig": Object {
            "ContentTypeOptions": Object {
              "Override": true,
            },
            "FrameOptions": Object {
              "FrameOption": "DENY",
              "Override": true,
            },
            "ReferrerPolicy": Object {
              "Override": true,
              "ReferrerPolicy": "strict-origin-when-cross-origin",
            },
            "StrictTransportSecurity": Object {
              "AccessControlMaxAgeSec": 31536000,
              "IncludeSubdomains": true,
              "Override": true,
              "Preload": true,
            },
            "XSSProtection": Object {
              "ModeBlock": true,
              "Override": true,
              "Protection": true,
            },
          },
        },
      },
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
