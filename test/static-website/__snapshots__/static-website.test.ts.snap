// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StaticWebsite 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "OriginRequest0052232D": {
      "DependsOn": [
        "OriginRequestServiceRole04760C2E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "7103577a2cb7fc67b45dcf792018885f3f5557b18e7a4b239e35ed10d119f5b9.zip",
        },
        "Description": "src/static-website/origin-request.edge-lambda.ts",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "OriginRequestServiceRole04760C2E",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "OriginRequestCurrentVersionD6F77E9F01c31a424b9789d3d40146516339cf86": {
      "Properties": {
        "FunctionName": {
          "Ref": "OriginRequest0052232D",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "OriginRequestParameter759D9B4C": {
      "Properties": {
        "Name": "/cdk/EdgeFunctionArn/eu-west-1/Stack/StaticWebsite/OriginRequest",
        "Type": "String",
        "Value": {
          "Ref": "OriginRequestCurrentVersionD6F77E9F01c31a424b9789d3d40146516339cf86",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "OriginRequestServiceRole04760C2E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`StaticWebsite 2`] = `
{
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "17c16a3854838fd3ff4bda08146122a6701f33b9c86ae17f415ad0dc47a97544.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiDefaultRoute1D83B0D8": {
      "Properties": {
        "ApiId": {
          "Ref": "ApiF70053CD",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "ApiDefaultRouteIntegrationDB7B670E",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "ApiDefaultRouteIntegrationDB7B670E": {
      "Properties": {
        "ApiId": {
          "Ref": "ApiF70053CD",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "Fn9270CBC0",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "ApiDefaultRouteIntegrationPermission612BAC34": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Fn9270CBC0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiF70053CD",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiDefaultStage189A7074": {
      "Properties": {
        "ApiId": {
          "Ref": "ApiF70053CD",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "ApiF70053CD": {
      "Properties": {
        "Name": "Api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "CustomCrossRegionStringParameterReaderCustomResourceProviderHandler65B5F33A": {
      "DependsOn": [
        "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "7b6b79862e18ab4b409cd9030e927a51058675765b06850d741b81cd0477a00d.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-east-1:",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":parameter/cdk/EdgeFunctionArn/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Fn9270CBC0": {
      "DependsOn": [
        "FnServiceRoleB9001A96",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "inline",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FnServiceRoleB9001A96",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FnServiceRoleB9001A96": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "HostedZoneDB99F866": {
      "Properties": {
        "Name": "my-site.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "StaticWebsiteARecord6F0B2A09": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "StaticWebsiteDistributionBAD21F75",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "www.my-site.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "StaticWebsiteAaaaRecordA6A958CD": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "StaticWebsiteDistributionBAD21F75",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "www.my-site.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "StaticWebsiteBucket0E92E0FC": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StaticWebsiteBucketPolicy86C0E5CF": {
      "Properties": {
        "Bucket": {
          "Ref": "StaticWebsiteBucket0E92E0FC",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "StaticWebsiteBucket0E92E0FC",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StaticWebsiteCertificateCertificateRequestorFunction8DAF9CCF": {
      "DependsOn": [
        "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyBBEC5BA3",
        "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleC558C69B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleC558C69B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleC558C69B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyBBEC5BA3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Condition": {
                "ForAllValues:StringEquals": {
                  "route53:ChangeResourceRecordSetsActions": [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                    "*.www.my-site.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/",
                    {
                      "Ref": "HostedZoneDB99F866",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyBBEC5BA3",
        "Roles": [
          {
            "Ref": "StaticWebsiteCertificateCertificateRequestorFunctionServiceRoleC558C69B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StaticWebsiteCertificateCertificateRequestorResource7C29CEF3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DomainName": "www.my-site.com",
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Region": "us-east-1",
        "ServiceToken": {
          "Fn::GetAtt": [
            "StaticWebsiteCertificateCertificateRequestorFunction8DAF9CCF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteDistributionBAD21F75": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "www.my-site.com",
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "LambdaFunctionAssociations": [
              {
                "EventType": "origin-request",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "StaticWebsiteOriginRequestArnReaderEA9004DC",
                    "FunctionArn",
                  ],
                },
              },
            ],
            "ResponseHeadersPolicyId": {
              "Ref": "StaticWebsiteResponseHeadersPolicyF3EBE566",
            },
            "TargetOriginId": "StackStaticWebsiteDistributionOrigin103625211",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2and3",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "StaticWebsiteBucket0E92E0FC",
                  "RegionalDomainName",
                ],
              },
              "Id": "StackStaticWebsiteDistributionOrigin103625211",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Fn::GetAtt": [
                "StaticWebsiteCertificateCertificateRequestorResource7C29CEF3",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "StaticWebsiteDistributionOrigin1S3Origin3045572F": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for StackStaticWebsiteDistributionOrigin103625211",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "StaticWebsiteHttpsRedirectRedirectAliasRecord2591f3E6FEEF4C": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "StaticWebsiteHttpsRedirectRedirectDistributionCFDistributionF7ADE06F",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "my-site.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "StaticWebsiteHttpsRedirectRedirectAliasRecordSix2591f309F9321D": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "StaticWebsiteHttpsRedirectRedirectDistributionCFDistributionF7ADE06F",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Name": "my-site.com.",
        "Type": "AAAA",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "StaticWebsiteHttpsRedirectRedirectBucket45BA11C9": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "WebsiteConfiguration": {
          "RedirectAllRequestsTo": {
            "HostName": "www.my-site.com",
            "Protocol": "https",
          },
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionEE7DB513": {
      "DependsOn": [
        "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy81FC4515",
        "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRole08DAF404",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-eu-west-1",
          },
          "S3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRole08DAF404",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRole08DAF404": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy81FC4515": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Condition": {
                "ForAllValues:StringEquals": {
                  "route53:ChangeResourceRecordSetsActions": [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                    "*.my-site.com",
                    "*.my-site.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/",
                    {
                      "Ref": "HostedZoneDB99F866",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy81FC4515",
        "Roles": [
          {
            "Ref": "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionServiceRole08DAF404",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorResource692E38D9": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DomainName": "my-site.com",
        "HostedZoneId": {
          "Ref": "HostedZoneDB99F866",
        },
        "Region": "us-east-1",
        "ServiceToken": {
          "Fn::GetAtt": [
            "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorFunctionEE7DB513",
            "Arn",
          ],
        },
        "SubjectAlternativeNames": [
          "my-site.com",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteHttpsRedirectRedirectDistributionCFDistributionF7ADE06F": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "my-site.com",
          ],
          "Comment": "Redirect to www.my-site.com from my-site.com",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
            ],
            "CachedMethods": [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "http-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "StaticWebsiteHttpsRedirectRedirectBucket45BA11C9",
                          "WebsiteURL",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "origin1",
            },
          ],
          "PriceClass": "PriceClass_All",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Fn::GetAtt": [
                "StaticWebsiteHttpsRedirectRedirectCertificateCertificateRequestorResource692E38D9",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "StaticWebsiteOriginRequestArnReaderEA9004DC": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ParameterName": "/cdk/EdgeFunctionArn/eu-west-1/Stack/StaticWebsite/OriginRequest",
        "RefreshToken": "OriginRequestCurrentVersionD6F77E9F01c31a424b9789d3d40146516339cf86",
        "Region": "us-east-1",
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionStringParameterReaderCustomResourceProviderHandler65B5F33A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CrossRegionStringParameterReader",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsitePutConfig8F8DD69A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StaticWebsitePutConfigCustomResourcePolicy54D08151",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"S3","action":"putObject","parameters":{"Bucket":"",
              {
                "Ref": "StaticWebsiteBucket0E92E0FC",
              },
              "","Key":"config.json","Body":"{\\"key1\\":\\"value1\\",\\"key2\\":\\"value2\\",\\"apiUrl\\":\\"https://",
              {
                "Ref": "ApiF70053CD",
              },
              ".execute-api.eu-west-1.",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/\\"}","ContentType":"application/json","CacheControl":"max-age=0, no-cache, no-store, must-revalidate"},"physicalResourceId":{"id":"config"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"S3","action":"putObject","parameters":{"Bucket":"",
              {
                "Ref": "StaticWebsiteBucket0E92E0FC",
              },
              "","Key":"config.json","Body":"{\\"key1\\":\\"value1\\",\\"key2\\":\\"value2\\",\\"apiUrl\\":\\"https://",
              {
                "Ref": "ApiF70053CD",
              },
              ".execute-api.eu-west-1.",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/\\"}","ContentType":"application/json","CacheControl":"max-age=0, no-cache, no-store, must-revalidate"},"physicalResourceId":{"id":"config"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsitePutConfigCustomResourcePolicy54D08151": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "StaticWebsiteBucket0E92E0FC",
                        "Arn",
                      ],
                    },
                    "/config.json",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StaticWebsitePutConfigCustomResourcePolicy54D08151",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StaticWebsiteResponseHeadersPolicyF3EBE566": {
      "Properties": {
        "ResponseHeadersPolicyConfig": {
          "Name": "StackStaticWebsiteResponseHeadersPolicyEF11926D",
          "SecurityHeadersConfig": {
            "ContentTypeOptions": {
              "Override": true,
            },
            "FrameOptions": {
              "FrameOption": "DENY",
              "Override": true,
            },
            "ReferrerPolicy": {
              "Override": true,
              "ReferrerPolicy": "strict-origin-when-cross-origin",
            },
            "StrictTransportSecurity": {
              "AccessControlMaxAgeSec": 31536000,
              "IncludeSubdomains": true,
              "Override": true,
              "Preload": true,
            },
            "XSSProtection": {
              "ModeBlock": true,
              "Override": true,
              "Protection": true,
            },
          },
        },
      },
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
