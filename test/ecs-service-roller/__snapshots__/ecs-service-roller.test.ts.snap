// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EcsServiceRoller with default 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620": Object {
      "DependsOn": Array [
        "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1",
        "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "1de7291df4432bda23037e2ef9f4bc0651aab3c7ce9bf737ac7f2f8c32e99115.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:UpdateService",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":service/",
                    Object {
                      "Ref": "ClusterEB0386A7",
                    },
                    "/",
                    Object {
                      "Fn::GetAtt": Array [
                        "ServiceD69D759B",
                        "Name",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1",
        "Roles": Array [
          Object {
            "Ref": "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ClusterEB0386A7": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "ClusterVpcFAA3CEDF": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ClusterVpcIGW1E358A6E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "ClusterVpcPrivateSubnet1DefaultRoute3B4D40DD": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet1NATGateway0693C346",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet1RouteTableAssociation9B8A88D9": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet1SubnetA4EB481A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPrivateSubnet2DefaultRoute011666AF": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet2NATGateway00B24686",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet2RouteTable73064A66": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet2RouteTableAssociationFB21349E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet2SubnetBD1ECB6E": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet1DefaultRoute62DA4B4B": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet1EIP433C56EE": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet1NATGateway0693C346": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet1EIP433C56EE",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet1RouteTable5594A636": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet1RouteTableAssociation0FBEF1F4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet1SubnetA9F7E0A5": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet2DefaultRoute97446C8A": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet2EIP203DF3E5": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet2NATGateway00B24686": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet2EIP203DF3E5",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet2RouteTable7B43F18C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet2RouteTableAssociation8446B27D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet2Subnet059113C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcVPCGW47AC17E9": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "EcsServiceRollerRuleAllowEventRuleEcsServiceRollerRuleRuleTarget0Handler42DA3E676E969203": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "EcsServiceRollerRuleFD890AC2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EcsServiceRollerRuleFD890AC2": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"service\\":\\"ECS\\",\\"action\\":\\"updateService\\",\\"parameters\\":{\\"service\\":\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "ServiceD69D759B",
                      "Name",
                    ],
                  },
                  "\\",\\"cluster\\":\\"",
                  Object {
                    "Ref": "ClusterEB0386A7",
                  },
                  "\\",\\"forceNewDeployment\\":true}}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ServiceD69D759B": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
              },
              Object {
                "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "Properties": Object {
        "GroupDescription": "Default/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": "my-image",
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TaskDef",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`EcsServiceRoller with rule 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620": Object {
      "DependsOn": Array [
        "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1",
        "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "1de7291df4432bda23037e2ef9f4bc0651aab3c7ce9bf737ac7f2f8c32e99115.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:UpdateService",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":service/",
                    Object {
                      "Ref": "ClusterEB0386A7",
                    },
                    "/",
                    Object {
                      "Fn::GetAtt": Array [
                        "ServiceD69D759B",
                        "Name",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1",
        "Roles": Array [
          Object {
            "Ref": "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ClusterEB0386A7": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "ClusterVpcFAA3CEDF": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ClusterVpcIGW1E358A6E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "ClusterVpcPrivateSubnet1DefaultRoute3B4D40DD": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet1NATGateway0693C346",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet1RouteTableAssociation9B8A88D9": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet1SubnetA4EB481A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPrivateSubnet2DefaultRoute011666AF": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet2NATGateway00B24686",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet2RouteTable73064A66": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet2RouteTableAssociationFB21349E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet2SubnetBD1ECB6E": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet1DefaultRoute62DA4B4B": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet1EIP433C56EE": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet1NATGateway0693C346": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet1EIP433C56EE",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet1RouteTable5594A636": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet1RouteTableAssociation0FBEF1F4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet1SubnetA9F7E0A5": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet2DefaultRoute97446C8A": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet2EIP203DF3E5": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet2NATGateway00B24686": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet2EIP203DF3E5",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet2RouteTable7B43F18C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet2RouteTableAssociation8446B27D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet2Subnet059113C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcVPCGW47AC17E9": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "Rule4C995B7F": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Array [
            "detail",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"service\\":\\"ECS\\",\\"action\\":\\"updateService\\",\\"parameters\\":{\\"service\\":\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "ServiceD69D759B",
                      "Name",
                    ],
                  },
                  "\\",\\"cluster\\":\\"",
                  Object {
                    "Ref": "ClusterEB0386A7",
                  },
                  "\\",\\"forceNewDeployment\\":true}}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "RuleAllowEventRuleRuleRuleTarget0Handler2041339A45E733B9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "Rule4C995B7F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServiceD69D759B": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
              },
              Object {
                "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "Properties": Object {
        "GroupDescription": "Default/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": "my-image",
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TaskDef",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`EcsServiceRoller with schedule 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620": Object {
      "DependsOn": Array [
        "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1",
        "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "1de7291df4432bda23037e2ef9f4bc0651aab3c7ce9bf737ac7f2f8c32e99115.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:UpdateService",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":service/",
                    Object {
                      "Ref": "ClusterEB0386A7",
                    },
                    "/",
                    Object {
                      "Fn::GetAtt": Array [
                        "ServiceD69D759B",
                        "Name",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRoleDefaultPolicy4D43A7C1",
        "Roles": Array [
          Object {
            "Ref": "AWSb4cf1abd4e4f4bc699441af7ccd9ec37ServiceRole9FFE9C50",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ClusterEB0386A7": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "ClusterVpcFAA3CEDF": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ClusterVpcIGW1E358A6E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "ClusterVpcPrivateSubnet1DefaultRoute3B4D40DD": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet1NATGateway0693C346",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet1RouteTableAssociation9B8A88D9": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet1SubnetA4EB481A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPrivateSubnet2DefaultRoute011666AF": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet2NATGateway00B24686",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet2RouteTable73064A66": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet2RouteTableAssociationFB21349E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet2SubnetBD1ECB6E": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet1DefaultRoute62DA4B4B": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet1EIP433C56EE": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet1NATGateway0693C346": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet1EIP433C56EE",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet1RouteTable5594A636": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet1RouteTableAssociation0FBEF1F4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet1SubnetA9F7E0A5": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet2DefaultRoute97446C8A": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet2EIP203DF3E5": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet2NATGateway00B24686": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet2EIP203DF3E5",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet2RouteTable7B43F18C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet2RouteTableAssociation8446B27D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet2Subnet059113C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcVPCGW47AC17E9": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "EcsServiceRollerRuleAllowEventRuleEcsServiceRollerRuleRuleTarget0Handler42DA3E676E969203": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "EcsServiceRollerRuleFD890AC2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EcsServiceRollerRuleFD890AC2": Object {
      "Properties": Object {
        "ScheduleExpression": "rate(5 hours)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AWSb4cf1abd4e4f4bc699441af7ccd9ec371511E620",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"service\\":\\"ECS\\",\\"action\\":\\"updateService\\",\\"parameters\\":{\\"service\\":\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "ServiceD69D759B",
                      "Name",
                    ],
                  },
                  "\\",\\"cluster\\":\\"",
                  Object {
                    "Ref": "ClusterEB0386A7",
                  },
                  "\\",\\"forceNewDeployment\\":true}}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ServiceD69D759B": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
              },
              Object {
                "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "Properties": Object {
        "GroupDescription": "Default/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": "my-image",
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TaskDef",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
