// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SlackEvents 1`] = `
Object {
  "Outputs": Object {
    "SlackTextractSlackEventsApiEndpointDCE9D710": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "SlackTextractSlackEventsSlackEventsApi117A1D5A",
          "ApiEndpoint",
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3ArtifactHash6186C720": Object {
      "Description": "Artifact hash for asset \\"07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3\\"",
      "Type": "String",
    },
    "AssetParameters07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3S3Bucket40685E96": Object {
      "Description": "S3 bucket for asset \\"07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3\\"",
      "Type": "String",
    },
    "AssetParameters07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3S3VersionKeyB838AA4D": Object {
      "Description": "S3 key for asset version \\"07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParametersc1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71ArtifactHash5A2E70B3": Object {
      "Description": "Artifact hash for asset \\"c1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71\\"",
      "Type": "String",
    },
    "AssetParametersc1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71S3BucketE2AC30BD": Object {
      "Description": "S3 bucket for asset \\"c1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71\\"",
      "Type": "String",
    },
    "AssetParametersc1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71S3VersionKey0FC34CC1": Object {
      "Description": "S3 key for asset version \\"c1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SlackTextractSlackEventsRuleAF3FF8E7": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Object {
              "type": Array [
                "file_shared",
              ],
            },
          },
          "resources": Array [
            "{{resolve:secretsmanager:my-slack-app:SecretString:appId::}}",
          ],
          "source": Array [
            "slack",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "SlackTextracthandler2995F40C",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputPath": "$.detail.event",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SlackTextractSlackEventsRuleAllowEventRuleSlackTextracthandlerEFD1C011BCBCE987": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "SlackTextracthandler2995F40C",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "SlackTextractSlackEventsRuleAF3FF8E7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "SlackTextractSlackEventsSlackEventsApi117A1D5A": Object {
      "Properties": Object {
        "Name": "SlackEventsApi",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "SlackTextractSlackEventsSlackEventsApiDefaultRouteD66A9675": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "SlackTextractSlackEventsSlackEventsApi117A1D5A",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$default",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "SlackTextractSlackEventsSlackEventsApiDefaultRouteHttpIntegration3f744b46c7527f2d6c675e89ab72e6a3D64E6D0A",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "SlackTextractSlackEventsSlackEventsApiDefaultRouteHttpIntegration3f744b46c7527f2d6c675e89ab72e6a3D64E6D0A": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "SlackTextractSlackEventsSlackEventsApi117A1D5A",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "SlackTextractSlackEventshandler91A38AF9",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "SlackTextractSlackEventsSlackEventsApiDefaultRouteSlackTextractSlackEventsSlackEventsApiDefaultRoute40B2776CPermission30CD766A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "SlackTextractSlackEventshandler91A38AF9",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "SlackTextractSlackEventsSlackEventsApi117A1D5A",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "SlackTextractSlackEventsSlackEventsApiDefaultStageAF84557A": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "SlackTextractSlackEventsSlackEventsApi117A1D5A",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "SlackTextractSlackEventshandler91A38AF9": Object {
      "DependsOn": Array [
        "SlackTextractSlackEventshandlerServiceRoleDefaultPolicyDC806BC0",
        "SlackTextractSlackEventshandlerServiceRole0F09489F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71S3BucketE2AC30BD",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71S3VersionKey0FC34CC1",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc1c5fd573bac55dc1da0d05e168959ad19eb80173d61a7da016e46564603df71S3VersionKey0FC34CC1",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SLACK_SIGNING_SECRET": "{{resolve:secretsmanager:my-slack-app:SecretString:signingSecret::}}",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SlackTextractSlackEventshandlerServiceRole0F09489F",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "SlackTextractSlackEventshandlerLogRetention5F25E029": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SlackTextractSlackEventshandler91A38AF9",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SlackTextractSlackEventshandlerServiceRole0F09489F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SlackTextractSlackEventshandlerServiceRoleDefaultPolicyDC806BC0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SlackTextractSlackEventshandlerServiceRoleDefaultPolicyDC806BC0",
        "Roles": Array [
          Object {
            "Ref": "SlackTextractSlackEventshandlerServiceRole0F09489F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SlackTextracthandler2995F40C": Object {
      "DependsOn": Array [
        "SlackTextracthandlerServiceRoleDefaultPolicy99C89D42",
        "SlackTextracthandlerServiceRoleF8DD11ED",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3S3Bucket40685E96",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3S3VersionKeyB838AA4D",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters07cdebaf941b6df13c0459d6b2ddb665500397abb8d11a3a0e66af8275c423d3S3VersionKeyB838AA4D",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SLACK_TOKEN": "{{resolve:secretsmanager:my-slack-app:SecretString:botToken::}}",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SlackTextracthandlerServiceRoleF8DD11ED",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SlackTextracthandlerLogRetention598DDFA9": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SlackTextracthandler2995F40C",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SlackTextracthandlerServiceRoleDefaultPolicy99C89D42": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "textract:DetectDocumentText",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SlackTextracthandlerServiceRoleDefaultPolicy99C89D42",
        "Roles": Array [
          Object {
            "Ref": "SlackTextracthandlerServiceRoleF8DD11ED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SlackTextracthandlerServiceRoleF8DD11ED": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
